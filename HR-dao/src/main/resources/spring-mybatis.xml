<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!--引入连接数据库信息的属性文件properties-->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!--常用的数据源-->
	<!--
		1、c3p0数据源-ComboPooledDataSource
		2、dbcp数据源
	-->
	<!--配置c3p0数据源-->
	<!--${键}：获取属性文件properties中键对应的值-->
	<bean id="c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!--给数据源注入url、驱动类、用户名、密码-->
		<property name="driverClass" value="${mysql_driver}"/>
		<property name="jdbcUrl" value="${mysql_url}"/>
		<property name="user" value="${mysql_username}"/>
		<property name="password" value="${mysql_password}"/>
	</bean>



	<!--spring集成mybatis-->
	<!--1 将mybatis中的数据库对象SqlSessionFactory交给spring来创建-->
	<!--SqlSessionFactoryBean是spring提供用来集成mybatis用的-->
	<!--用来创建mybatis的数据库对象-->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--datasource属性执行数据源，为哪个数据库创建对象-->
		<property name="dataSource" ref="c3p0"/>
		<!--第一种方式：通过configLocation指定mybatis的核心配置文件mybatis-config.xml，推荐使用-->
		<!--configLocation指定mybatis核心配置文件的路径-->
		<property name="configLocation" value="classpath:mybatis.xml"/>
		<!--第二种方式：通过mapperLocations直接指定映射文件的路径，特点：不需要mybatis核心配置文件，简单，不是很灵活-->
		<!--<property name="mapperLocations" value="classpath:com/ck/mappers/*.xml"/>-->
	</bean>
	<!--2、将mybatis中dao接口的实现类(代理类)交给spring来创建-->
	<!--MapperScannerConfigurers是spring提供的，用来扫描指定包，为包中所有接口生成实现类-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--basePackage指定要扫描的包名-->
		<property name="basePackage" value="com.ck.dao"/>
	</bean>



</beans>